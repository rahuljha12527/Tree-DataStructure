public class Solution {

/*	Binary Tree Node class 
 * 
 * 	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;
		
		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	*/
   public static  BinaryTreeNode<Integer> Sort(int[] arr,int start,int end){
       
       if(start>end){
           return null;
       }
       
       int mid=(start+end)/2;
       
       BinaryTreeNode<Integer> root=new BinaryTreeNode<Integer>(arr[mid]);
       
       root.left=Sort(arr,start,mid-1);
       root.right=Sort(arr,mid+1,end);
       return root;
       
   }
    
	public static BinaryTreeNode<Integer> SortedArrayToBST(int[] arr){
		
        int len=arr.length-1;
         BinaryTreeNode<Integer> root= Sort(arr,0,len);
        return root;

	}
}	
