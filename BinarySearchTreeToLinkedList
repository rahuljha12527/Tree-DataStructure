public class Solution {

/*	Binary Tree Node class 
 * 
 * 	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;
		
		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	*/

/* LinkedList Node Class
*
*	
class LinkedListNode<T> {
	T data;
	LinkedListNode<T> next;
	
	public LinkedListNode(T data) {
		this.data = data;
	}
}
*/

	public static LinkedListNode<Integer> BSTToSortedLL(BinaryTreeNode<Integer> root){
		
        if(root==null){
            return null;
        }
        
        LinkedListNode<Integer> head=BSTToSortedLL(root.left);
        LinkedListNode<Integer> q=new LinkedListNode<Integer>(root.data);
        
        LinkedListNode<Integer> tailS=BSTToSortedLL(root.right);
        
        if(head==null){
            head=q;
        }
        LinkedListNode<Integer> temp=head;
        
        while(temp.next!=null){
            temp=temp.next;
        }
        
        temp.next=q;
        q.next=tailS;
        
        return head;
        
            
        
        
		
	}
}	
