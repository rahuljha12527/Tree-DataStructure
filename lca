public class Solution {

/*	Binary Tree Node class
 * 
 * class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;
		
		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	*/

	public static int lcaInBST(BinaryTreeNode<Integer> root , int a , int b){
		// Write your code here

        
        if(root==null){
            return -1;
            
        }
        if(a==b){
            return -1;
        }
        
        
        if((root.data ==a)|| (root.data==b)){
            return root.data;
        }
        
        
        if(root.data<a && root.data<b){
            return lcaInBST(root.right,a,b);
        }
        
        else if(root.data>=a && root.data>=b){
            return lcaInBST(root.left,a,b);
        }
        else{
           int x=lcaInBST(root.left,a,b);
           int y=lcaInBST(root.right,a,b);
            if(x!=-1 && y!=-1){
                return root.data;
            }
         //   return root.data;
            else if(x!=-1){
                return x;
            }
            else{
                return y;
            }
            
        }
        
       
	}
}
