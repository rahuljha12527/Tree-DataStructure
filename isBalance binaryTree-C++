// Following is the Binary Tree node structure
#include<cmath>

/**************

class BinaryTreeNode {
    public : 
    T data;
    BinaryTreeNode<T> *left;
    BinaryTreeNode<T> *right;

    BinaryTreeNode(T data) {
        this -> data = data;
        left = NULL;
        right = NULL;
    }
};
***************/
int height(BinaryTreeNode<int> *root){
    
    
    if(root==NULL){
        return 0;
    }
    
    return 1+max(height(root->left),height(root->right));
}

bool isBalanced(BinaryTreeNode<int> *root) {
   
    
    
    if(root==NULL){
        return true;
    }
    
    //bool flag=true;
    
    if(abs(height(root->left)-height(root->right))>1){
        return false;
    }
    
    bool leftAns=isBalanced(root->left);
    bool rightAns=isBalanced(root->right);
    
    return leftAns && rightAns;

    
}
