// Following is the given TreeNode structure.
/**************

template <typename T>
class TreeNode {
public:
    T data;
    vector<TreeNode<T>*> children;
    
    TreeNode(T data) {
        this->data = data;
    }
    
    ~TreeNode() {
        for (int i = 0; i < children.size(); i++) {
            delete children[i];
        }
    }
    
};
***************/
#include <bits/stdc++.h> 
using namespace std;

void printLevelWise(TreeNode<int>* root) {
    

    queue<TreeNode<int>*> q;
    q.push(root);    
    
  while(!q.empty())
  {
    TreeNode<int>* front=q.front();
    cout<<front->data<<":";
    q.pop();
    for(int i=0;i<front->children.size();i++)
    {
      cout<<front->children[i]->data;
      if(i!=front->children.size()-1)
        cout<<",";
    }
    cout<<endl;
      for(int i=0;i<front->children.size();i++)
    {
       q.push(front->children[i]);
    }
  }
}













